<Window x:Class="Bookstore.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Bookstore.Client"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="600">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding UpdateBooksCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Update Books" Command="{Binding UpdateBooksCommand}"/>
                <MenuItem Header="Log out" Command="{Binding LogoutCommand}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Add a Book" Command="{Binding CreateBookCommand}"/>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0">
                <GroupBox.Header>
                    <Label Content="Books" />
                </GroupBox.Header>
                <DataGrid VerticalContentAlignment="Stretch" ItemsSource="{Binding Books}" IsReadOnly="True"
                      AutoGenerateColumns="False">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding SelectBookCommand}"
                                CommandParameter="{
                                    Binding Path=SelectedItem,
                                    RelativeSource={
                                        RelativeSource
                                        AncestorType={x:Type DataGrid},
                                        AncestorLevel=1}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ISBN" Binding="{Binding ISBN}" />
                        <DataGridTextColumn Header="Title" Binding="{Binding Title}" />
                        <DataGridTextColumn Header="Author" Binding="{Binding Author}" />
                        <DataGridTextColumn Header="Published In" Binding="{Binding PublishDate}" />
                        <DataGridTemplateColumn Header="Cover Image">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding CoverImage}" MaxHeight="50" MaxWidth="50" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button Content="Add Volume" Width="100" Margin="5" Command="{Binding AddVolumeCommand}"/>
            </StackPanel>
            <GroupBox Grid.Row="2">
                <GroupBox.Header>
                    <Label Content="Volumes"/>
                </GroupBox.Header>
                <DataGrid VerticalContentAlignment="Stretch" ItemsSource="{Binding BookVolumes}" IsReadOnly="True"
                      AutoGenerateColumns="False">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding SelectVolumeCommand}"
                                CommandParameter="{
                                    Binding Path=SelectedItem,
                                    RelativeSource={
                                        RelativeSource
                                        AncestorType={x:Type DataGrid},
                                        AncestorLevel=1}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Libarary ID" Binding="{Binding LibraryId}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <StackPanel Grid.Row="3" Orientation="Horizontal">
                <Button Content="Delete Volume" Width="100" Margin="5" Command="{Binding DeleteVolumeCommand}"/>
            </StackPanel>
            <GroupBox Grid.Row="4">
                <GroupBox.Header>
                    <Label Content="Lendings"/>
                </GroupBox.Header>
                <DataGrid VerticalContentAlignment="Stretch" ItemsSource="{Binding Lendings}" IsReadOnly="True"
                      AutoGenerateColumns="False" Name="datagridLendings">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding SelectLendingCommand}"
                                CommandParameter="{
                                    Binding Path=SelectedItem,
                                    RelativeSource={
                                        RelativeSource
                                        AncestorType={x:Type DataGrid},
                                        AncestorLevel=1}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Status" Binding="{Binding IsActive}" />
                        <DataGridTextColumn Header="Visitor" Binding="{Binding Visitor.Name}" />
                        <DataGridTextColumn Header="From" Binding="{Binding StartDate}" />
                        <DataGridTextColumn Header="To" Binding="{Binding EndDate}" />
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <StackPanel Grid.Row="5" Orientation="Horizontal">
                <Button Content="Set Active" Width="100" Margin="5" Command="{Binding SetActiveCommand}">
                    <Button.CommandParameter>
                        <s:Boolean>True</s:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="Set Inactive" Width="100" Margin="5" Command="{Binding SetInactiveCommand }">
                    <Button.CommandParameter>
                        <s:Boolean>False</s:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
